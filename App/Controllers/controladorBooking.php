<?php
namespace Controlador;

use Classes\typesHotel;
use Classes\controladorMySql;

use Dompdf\Dompdf;
use PHPMailer;

class controladorBooking {
    public function curlHelper($metodo = "GET", $url = "hotel-api/1.0/bookings", $timeOut = 60, $postFields = null) {
        $url = HOTELBEDS_API_ENDPOINT . $url;

        // Your API Key and secret from developer.hotelbeds.com
        $apiKey = HOTELBEDS_API_KEY;  
        $Secret = HOTELBEDS_SECRET;

        // Signature is generated by SHA256 (Api-Key + Secret + Timestamp (in seconds))
        $signature = hash("sha256", $apiKey.$Secret.time());

        $curl = curl_init();

        $curlArray = array(
            CURLOPT_URL => $url,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => $timeOut,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => $metodo,
            CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "accept-encoding: gzip",
                "api-key: ". $apiKey ."",
                "cache-control: no-cache",
                "content-type: application/json",
                "x-signature: ". $signature .""
            ),
        );

        if ($metodo == "POST") {
            $curlArray[CURLOPT_POSTFIELDS] = $postFields;
        }

        curl_setopt_array($curl, $curlArray);

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);

        if ($err) {
            return "cURL Error #:" . $err;
        } else {
            return $response;
        }
    }

    // Booking confirmation
    // The Booking operation requests a reservation confirmation for the specified ratekey or ratekeys.

    // BookingAPI does not support on-request confirmations. All confirmations are instant confirmations.

    // Timeout for this operation is 60 seconds.
    public function hacerReservacion($payload = null) {
        $return = true;

        if (!$payload) {
            $return = false;
            $post_content = file_get_contents("php://input");
        } else {
            $post_content = $payload;
        }

        $response = $this->curlHelper("POST", "hotel-api/1.0/bookings", 60, $post_content);
        // $response = '{"auditData":{"processTime":"1047","timestamp":"2021-12-09 21:54:02.215","requestHost":"103.218.217.134, 70.132.18.80, 35.227.250.134, 130.211.1.181, 10.197.40.70","serverId":"ip-10-185-88-223.eu-west-1.compute.internal#A+","environment":"[awseuwest1, awseuwest1a, ip_10_185_88_223]","release":"","token":"6FEDFCE26FCD4306A308DC5CAC670ECE","internal":"0|06~~24297~-424040694~S~~~NOR~FFB2155A9F62415163891697721000AAMX000003100000000102448c|MX|10|31|1|||||||||||R|1|2|~1~1~0|0|0||0|df2b30f39a0b10568420ced17746ab65||||"},"booking":{"reference":"71-2565130","clientReference":"LEXGOTOURS","creationDate":"2021-12-09","status":"CONFIRMED","modificationPolicies":{"cancellation":true,"modification":true},"creationUser":"df2b30f39a0b10568420ced17746ab65","holder":{"name":"JOSE","surname":"TEJERO AGUILAR"},"hotel":{"checkOut":"2021-12-29","checkIn":"2021-12-27","code":183852,"name":"City Express Merida","categoryCode":"4EST","categoryName":"4 STARS","destinationCode":"MER","destinationName":"Merida - Yucatan","zoneCode":10,"zoneName":"Mérida","latitude":"21.0206099","longitude":"-89.6199745","rooms":[{"status":"CONFIRMED","id":1,"code":"SGL.ST","name":"ONE QUEEN BED","paxes":[{"roomId":1,"type":"AD","name":"José","surname":"Tejero"}],"rates":[{"rateClass":"NOR","net":"141.43","sellingRate":"151.66","hotelMandatory":true,"rateComments":"Car park NO. Check-in hour 15:00 - 00:00. Added values: \nComplimentary   transportation service no more than 10 km around, the reservation has to be made in  advance, maximun 8 pax.\nComplimentary  high speed wireless  in the room and  public areas.\nChildren under 12  for free sharing room with adults -1 child per 1 adult -\n As a result of local government measures and guidelines put in place by services providers – including hotels and ancillaries – guests may find that some facilities or services are not available.Please visit https://static-sources.s3-eu-west-1.amazonaws.com/policy/index.html for further information (15/05/2020-31/12/2021).","paymentType":"AT_WEB","packaging":false,"boardCode":"AB","boardName":"AMERICAN BREAKFAST","cancellationPolicies":[{"amount":"68.43","from":"2021-12-24T23:59:00-06:00"}],"rateBreakDown":{"rateDiscounts":[{"code":"SDD","name":"UNKNOWN","amount":"-44.67"}]},"rooms":1,"adults":1,"children":0}]}],"totalNet":"141.43","currency":"EUR","supplier":{"name":"CLUB TURAVIA SA DE CV","vatNumber":"CTU940107CK8"}},"invoiceCompany":{"code":"E14","company":"HOTELBEDS S.L.U.","registrationNumber":"ESB57218372"},"totalNet":141.43,"pendingAmount":141.43,"currency":"EUR"}}';
        
        if (!$return) {
            header('Content-type: application/json');
            echo $response;

            return;
        }
        
        return $response;
    }

    // Booking list
    // The booking list operation returns a list of bookings based on the search criteria. The most important information returned for each booking in the list is:

    // Booking reference
    // Booking holder
    // Booking paxes
    // Hotel, rooms and boards confirmed
    // Booking rates
    // The results are returned in a paginated response that can be filtered with the use of parameters in the request.

    // Timeout for this operation is 60 seconds.
    public function listarReservaciones($filterType = "CHECKIN", $status = "ALL", $hotel = 1, $fromDate="2021-12-27", $toDate = "2021-12-29", $clientReference = "LEXGOTOURS") {
        $qry = http_build_query(["filterType"           => $filterType,
                                 "status"               => $status,
                                 "hotel"                => $hotel,
                                 "start"                => $fromDate,
                                 "end"                  => $toDate,
                                 "clientReference"      => $clientReference,
                                 "from"                 => 1,
                                 "to"                   => 25]);

        $response = $this->curlHelper("GET", "hotel-api/1.0/bookings?" . $qry);

        header('Content-type: application/json');
        echo $response;
    }

    // Booking detail
    // The BookingDetail operation allows to retrieve a booking with all its details from the booking reference locator.
    public function detalleReservacion($bookingId = null) {
        if (substr($bookingId, 0, 4) == "LGT-") {
            $sql = controladorMySql::getInstance();
    
            $qry = "SELECT reference
                    FROM T_Booking
                    
                    WHERE Folio_LGT = '{$bookingId}'";
    
            $bookingId = $sql->consulta($qry)["reference"][0];
        }


        $response = $this->curlHelper("GET", "hotel-api/1.0/bookings/$bookingId");

        header('Content-type: application/json');
        echo $response;
    }

    // Booking change
    // The BookingChange operation is used to change or update different values of a booking.

    // The changes that can be performed are:

    // Change clientReference
    // Change remarks
    // Change holder name and surname
    // Change checkIn and checkOut date
    // Change board plans
    // Change passengers name and surname
    // Add rooms (only from the same type already in the booking)
    // Remove rooms from a booking (partial cancellation)
    public function modificarReservacion($bookingId) {
        $put_vars = json_decode(file_get_contents("php://input"), true);

        $response = $this->curlHelper("PUT", "hotel-api/1.0/bookings/$bookingId");

        header('Content-type: application/json');
        echo $response;
    }

    // Booking cancellation
    // BookingCancellation is used either to simulate a cancellation or to perform the actual cancellation.Cancellations always take into account
    // day and time of the destination in order to calculate what cancellation policy should be applied. Timeout for this operation is 60 seconds.
    public function cancelarReservacion($bookingId, $cancellationFlag = "SIMULATION", $language = "CAS") {
        if (MODO === "production") {
            $cancellationFlag === "CANCELLATION";
        }

        if (substr($bookingId, 0, 4) == "LGT-") {
            $sql = controladorMySql::getInstance();
    
            $qry = "SELECT reference
                    FROM T_Booking
                    
                    WHERE Folio_LGT = '{$bookingId}'";
    
            $bookingId = $sql->consulta($qry)["reference"][0];
        }
        
        $response = $this->curlHelper("DELETE", "hotel-api/1.0/bookings/$bookingId?cancellationFlag=$cancellationFlag&language=$language");

        $responseDecoded = json_decode($response);

        if (isset($responseDecoded->booking->status)) {
            if ($responseDecoded->booking->status == "CANCELLED") {
                $sql = controladorMySql::getInstance();
    
                $qry = "UPDATE T_Booking
                        SET `status` = '{$responseDecoded->booking->status}',
                            `cancellationReference` = '{$responseDecoded->booking->cancellationReference}'
                        
                        WHERE reference = '{$responseDecoded->booking->reference}'";
        
                $sql->ejecuta($qry);
            }
        }

        header('Content-type: application/json');
        echo $response;
    }

    public function descargarReservacion($folio) {
        $getMail    = $_GET["mail"] ?? false;
        $getPdf     = $_GET["pdf"]  ?? false;

        $type = new typesHotel();
        $htmlReservacionTemplate = file_get_contents("views/templates/formato-reserva.html");

        // Consultar los datos de la reserva mediante el folio de reserva desde la base de datos
        $datosReserva = $type->CheckDocument($folio);
        $htmlHabitaciones   = '';
        $htmlHuespedes      = '';

        $contHabitaciones = 0;
        $contHuespedes    = 0;
        
        for ($i=0, $l=count($datosReserva['habitacion']); $i < $l; $i++) { 
            if ($datosReserva["nombreTitular"][$i] !== '') {
                $contHabitaciones++;
                $contHuespedes++;

                $nombreCompletoTitular = ($datosReserva["apellidoTitular"][$i] !== "") ? $datosReserva["nombreTitular"][$i] . " " . $datosReserva["apellidoTitular"][$i] : $datosReserva["apellidoTitular"][$i];
    
                $txtTipoServicio = ucwords(mb_strtolower($datosReserva['boardName'][$i]));
    
                $htmlHabitaciones .= "<div class='fila' style='margin-bottom: 1.5rem'>
                                            <h3>Información habitación {$datosReserva['habitacion'][$i]}</h3>
                                        </div>
                                    
                                        <div class='fila'>
                                            <div class='contenedor-txt-input'>
                                                <div class='d-inline_block v_a-top w-14'>
                                                    <p>Tipo de servicio: </p>
                                                </div>
    
                                                <div class='input-border' style='width: 58.75rem'>
                                                    <p>$txtTipoServicio</p>
                                                </div>
                                            </div>
                                        </div>
    
                                        <div class='fila'>
                                            <div class='contenedor-txt-input'>
                                                <div class='d-inline_block v_a-top w-14'>
                                                    <p>Observaciones extras: </p>
                                                </div>
    
                                                <div class='input-border' style='width: 58.75rem'>
                                                    <p>{$datosReserva['remark'][$i]}</p>
                                                </div>
                                            </div>
                                        </div>";

                if ($datosReserva['rateComments'][$i] != "") {
                    $htmlHabitaciones .= "<div class='fila' style='margin-top: 40px'>
                                            <div class='contenedor-txt-input'>
                                                <div class='d-inline_block v_a-top w-14'>
                                                    <p>Consideraciones: </p>
                                                </div>
    
                                                <div class='input-border' style='width: 58.75rem; max-height: none;'>
                                                    <p>{$datosReserva['rateComments'][$i]}</p>
                                                </div>
                                            </div>
                                        </div>";
                }
    
                $htmlHuespedes .= "<div class='fila'>
                                        <div class='contenedor-txt-input' style='width: 100%;'>
                                            <div class='d-inline_block v_a-top w-14'>
                                                <p>Huésped [0{$contHuespedes} - Adulto]: </p>
                                            </div>
    
                                            <div class='input-border input-txt-medium' style='width: 58.75rem;'>
                                                <p>{$nombreCompletoTitular}</p>
                                            </div>
                                        </div>
                                    </div>";
            } else if (($datosReserva["nombreTitular"][$i] === '') && ($datosReserva["type"][$i] === 'CH')) {
                $contHuespedes++;

                $edadMenor = $datosReserva["age"][$i];
                $htmlHuespedes .= "<div class='fila'>
                                        <div class='contenedor-txt-input' style='width: 100%;'>
                                            <div class='d-inline_block v_a-top w-14'>
                                                <p>Huésped [0{$contHuespedes} - Menor]: </p>
                                            </div>

                                            <div class='d-inline_block v_a-top' style='width: 58.75rem; font-weight: bold;' >
                                                <p style='text-align:center;margin: 0 auto;padding-bottom: 4px;border-bottom: 1px solid black;background: #f1f1f1;'>Menor de $edadMenor años de edad</p>
                                            </div>
                                        </div>
                                    </div>";
            }
        }

        $sql = controladorMySql::getInstance();

        $qry = "SELECT thd.id, tc.phoneHotel, ta.content, ta.street, ta.number, ta.postalCode, ta.city
                FROM T_Hotel_Description thd

                JOIN T_Hotel_Contact tc ON tc.id_hotel_description = thd.id
                JOIN T_Hotel_Address ta ON ta.id_hotel_description = thd.id
                
                WHERE code = {$datosReserva['code'][0]}";

        $datosExtra = $sql->consulta($qry);

        $estrellas = $datosReserva["categoryCode"][0];

        if ($estrellas == "MINI") {
            $estrellas = 2;
        } else if (($estrellas == "BB") || ($estrellas == "BB3")) {
            $estrellas = 3;
        } else if (($estrellas == "SUP") || ($estrellas == "BOU") || ($estrellas == "BB4")) {
            $estrellas = 4;
        } else if (($estrellas == "HIST") || ($estrellas == "BB5")) { 
            $estrellas = 5;
        } else {
            $matches = [];

            preg_match_all("/\d/", $estrellas, $matches);
            $estrellas = implode(".", $matches[0]);
            $estrellas = round( $estrellas, 0, PHP_ROUND_HALF_UP);
        }                                    

        $estrellas = ($estrellas > 5) ? 5 : $estrellas;

        $vars = array(
            '$urlBase'              => ($_SERVER["DOCUMENT_ROOT"] == 'C:/xampp/htdocs') ? "http://localhost/lexgotravel/" : "https://lexgotravel.com/",
            '$fecha'                => date("Y-m-d"),
            '$noFolioHotelbeds'     => $datosReserva["reference"][0],
            '$noFolio'              => $datosReserva["Folio_LGT"][0],
            '$nombreHotel'          => $datosReserva["hotelName"][0],
            '$categoriaHotel'       => $estrellas .  " Estrellas",
            '$destinationName'      => $datosReserva["destinationName"][0],
            '$telefonoHotel'        => $datosExtra["phoneHotel"][0],
            '$direccionHotel'       => $datosExtra["content"][0] . ", " . $datosExtra["postalCode"][0] . " - " . $datosExtra["city"][0],
            '$htmlHabitaciones'     => $htmlHabitaciones,
            '$checkIn'              => $datosReserva["checkIn"][0],
            '$checkOut'             => $datosReserva["checkOut"][0],
            '$txtExtras'            => $datosReserva["remark"][0],
            '$txt-nombre-completo'  => ucwords(mb_strtolower($datosReserva["nombreResp"][0] . " " . $datosReserva["apeResp"][0])),
            '$txt-numero-tel'       => $datosReserva["telefono"][0],
            '$txt-email'            => $datosReserva["correo"][0],
            '$htmlHuespedes'        => $htmlHuespedes,
            '$supplier_name'        => $datosReserva["supplier_name"][0],
            '$vatNumber'            => $datosReserva["vatNumber"][0],
        );

        $htmlReservacionTemplate = strtr($htmlReservacionTemplate, $vars);
        
        ////////////////////////////////////
        //// Se empieza a crear el PDF /////
        ////////////////////////////////////
        $dompdf = new Dompdf(['enable_remote' => true, 'fontHeightRatio' => 1 ]);

        // La medida original de la pagina en px es de 1920 * 2480, sin embargo para definir las medidas en DOMPDF se tienen que especificar en puntos (pt)
        // 1pt = 1.333px, por lo tanto nuestras medidas quedarian en (1920 / 1.333 = 1440) * (2480 /  1.333 = 1860)
        // Se agrega una tolerancia de 40pt en la altura debido a que al renderizar si no se hace esto sew genera una pagina en blanco 
        $customPaper = array(0,0,1440,1860 + 40);
        $dompdf->setPaper($customPaper);

        $dompdf->loadHtml($htmlReservacionTemplate);
        $dompdf->render();
        
        if ($getPdf != false) {
            $dompdf->stream();
        }

        $contenido = $dompdf->output();

        /////////////////////////////////////
        //// Se crea el correo a enviar /////
        /////////////////////////////////////
        if ($getMail != false) {
            $mail = new PHPMailer();
            $mail->IsSMTP();

            // $mail->SMTPSecure = 'tls';
            // $mail->SMTPDebug  = 1;
            $mail->SMTPAuth   = true;
            $mail->Host       = "mail.lexgotravel.com";
            $mail->Username   = "ventas@lexgotravel.com";
            $mail->Password   = "Ocj7_35j";
            $mail->Port       = 587;
            $mail->CharSet    = "UTF-8";

            $mail->From     = 'ventas@lexgotravel.com';    //Nuestro correo de la empresa
            $mail->FromName = "LexGo Travel";              //Nombre de la empresa
            $mail->Subject  = 'Reservacion ' . $datosReserva["hotelName"][0];

            $mail->Body     = ucwords(mb_strtolower($datosReserva["nombreResp"][0] . " "
                                . $datosReserva["apeResp"][0])) .
                                ' aqui tienes el comprobante de tu reserva en el hotel '
                                . $datosReserva["hotelName"][0] . " el cual te servira para ingresar al mismo";

            $mail->AddAddress($datosReserva["correo"][0]);      //Correo a donde se enviara el pdf (Correo del cliente)
            $mail->AddAddress("hola@lexgotour.com");            //Correo a donde se enviara el pdf (Correo del cliente)
            
            // Definiendo el adjunto 
            $mail->AddStringAttachment($contenido, $folio . '.pdf', 'base64', 'application/pdf');
            
            // Enviando
            $mail->Send();

            http_response_code(200);
            echo "Enviado";

            return;
        }
    }
}
